{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routes.ts","./src/app/components/editor/editor.component.css","./src/app/components/editor/editor.component.html","./src/app/components/editor/editor.component.ts","./src/app/components/new-problem/new-problem.component.css","./src/app/components/new-problem/new-problem.component.html","./src/app/components/new-problem/new-problem.component.ts","./src/app/components/problem-detail/problem-detail.component.css","./src/app/components/problem-detail/problem-detail.component.html","./src/app/components/problem-detail/problem-detail.component.ts","./src/app/components/problem-list/problem-list.component.css","./src/app/components/problem-list/problem-list.component.html","./src/app/components/problem-list/problem-list.component.ts","./src/app/services/collaboration.service.ts","./src/app/services/data.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport { DataService } from './services/data.service';\nimport { CollaborationService } from './services/collaboration.service';\nimport { routing } from './app.routes';\nimport { FormsModule } from '@angular/forms';\nimport { EditorComponent } from './components/editor/editor.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    EditorComponent\n  ],\n  imports: [\n    routing,\n    FormsModule,\n    BrowserModule,\n    HttpClientModule,\n  ],\n  providers: [\n    DataService,\n    CollaborationService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Routes, RouterModule } from '@angular/router';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        redirectTo: 'problems',\n        pathMatch: 'full' // excat match\n    },\n    {\n        path: 'problems',\n        component: ProblemListComponent\n    },\n    {\n        path: 'problems/:id',\n        component: ProblemDetailComponent\n    },\n    {\n        path: '**', // any other routes redirect to 'problem'\n        redirectTo: 'problems'\n    }\n];\n\nexport const routing = RouterModule.forRoot(routes);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.routes.ts","module.exports = \"@media screen {\\n  #editor {\\n    height: 600px;\\n  }\\n  .lang-select {\\n    width: 100px;\\n    margin-right: 10px;\\n  }\\n  header .btn {\\n    margin: 0 5px;\\n  }\\n  footer .btn {\\n    margin: 0 5px;\\n  }\\n  .editor-footer, .editor-header {\\n    margin: 10px 0;\\n  }\\n  .cursor {\\n    /*position:absolute;*/\\n    background: rgba(0, 250, 0, 0.5);\\n    z-index: 40;\\n    width: 2px !important;\\n  }\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/editor/editor.component.css\n// module id = ./src/app/components/editor/editor.component.css\n// module chunks = main","module.exports = \"<section>\\n  <header class=\\\"editor-header\\\">\\n    <!-- for select language-->\\n    <!-- when change, call setLanguage(language)-->\\n    <select class=\\\"form-control pull-left lang-select\\\" name=\\\"language\\\"\\n            [(ngModel)]=\\\"language\\\" (change)=\\\"setLanguage(language)\\\">\\n      <option *ngFor=\\\"let language of languages\\\" [value]=\\\"language\\\">\\n        {{language}}\\n      </option>\\n    </select>\\n    <!--reset button -->\\n    <!-- Button trigger modal -->\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\"\\n            data-target=\\\"#myModal\\\">\\n      Reset\\n    </button>\\n    <!-- Modal -->\\n    <div class=\\\"modal fade\\\" id=\\\"myModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-\\n         labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n      <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-header\\\">\\n            <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Are you\\n              sure</h5>\\n            label=\\\"Close\\\">\\n            <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n              <span aria-hidden=\\\"true\\\">&times;</span>\\n            </button>\\n          </div>\\n          <div class=\\\"modal-body\\\">\\n            You will lose current code in the editor, are you sure?\\n          </div>\\n          <div class=\\\"modal-footer\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-\\n                    dismiss=\\\"modal\\\">Cancel\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-\\n                    dismiss=\\\"modal\\\"\\n                    (click)=\\\"resetEditor()\\\">Reset\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </header>\\n\\n  <div class=\\\"row\\\">\\n    <div id=\\\"editor\\\">\\n    </div>\\n  </div>\\n\\n  <div>\\n    {{output}}\\n  </div>\\n\\n  <footer class=\\\"editor-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-success pull-right\\\"\\n            (click)=\\\"submit()\\\">Submit Solution\\n    </button>\\n  </footer>\\n</section>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/editor/editor.component.html\n// module id = ./src/app/components/editor/editor.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { CollaborationService } from '../../services/collaboration.service';\nimport { DataService } from '../../services/data.service';\n\ndeclare var ace: any; // since ace is not written by ts, use type any\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css']\n})\nexport class EditorComponent implements OnInit {\n    editor: any;\n    languages: string[]  = ['Java', 'Python'];\n    language = 'Java';\n    defaultContent = {\n        'Java': ` public class Example {\n           public static void main(String[] args) {\n            // Type your Java code here\n           }\n        }`,\n        'Python': `class Solution:\n            def example():\n                # write your python code here.\n        `\n    };\n    sessionId: string;\n    output: string; // for storing build and run output\n\n    constructor(private collaboration: CollaborationService,\n                private route: ActivatedRoute,\n                private dataService: DataService) { }\n\n    ngOnInit() {\n        // use problem id as session id\n        // since we subscribe the changes, every time the params changes\n        // sessionId will be updated and the editor will be initilized\n        this.route.params\n            .subscribe(params => {\n              this.sessionId = params['id'];\n              this.initEditor();\n              this.collaboration.restoreBuffer();\n            });\n    }\n\n    initEditor(): void {\n        this.editor = ace.edit('editor');\n        this.editor.setTheme('ace/theme/eclipse');\n        this.resetEditor();\n\n        // setup collaboration socket\n        this.collaboration.init(this.editor, this.sessionId);\n        this.editor.lastAppliedChange = null;\n        // register change callback\n        this.editor.on('change', (e) => {\n            console.log('editor changes: ' + JSON.stringify(e));\n            // check if the change is same as last change,\n            // if they are the same, skip this change\n            if (this.editor.lastAppliedChange !== e) {\n                this.collaboration.change(JSON.stringify(e));\n            }\n        });\n    }\n    resetEditor(): void {\n        this.editor.setValue(this.defaultContent[this.language]);\n        this.editor.getSession().setMode(\n          'ace/mode/' + this.language.toLowerCase()\n        );\n    }\n    setLanguage(language: string): void {\n        this.language = language;\n        this.resetEditor();\n    }\n    submit(): void {\n        const user_code = this.editor.getValue();\n        console.log(user_code);\n\n        const data = {\n            usercode: user_code,\n            lang: this.language.toLocaleLowerCase()\n        };\n\n        this.dataService.buildAndRun(data).then(res => this.output = res.text);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/editor/editor.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/new-problem/new-problem.component.css\n// module id = ./src/app/components/new-problem/new-problem.component.css\n// module chunks = main","module.exports = \"<div>\\n\\t<form #formRef=\\\"ngForm\\\">\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<label for=\\\"problemName\\\">Problem Name</label>\\n\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemName\\\"\\n\\t\\t\\tname=\\\"ProblemName\\\" placeholder=\\\"Input problem name\\\"\\n\\t\\t\\t[(ngModel)]=\\\"newProblem.name\\\" required>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<label for=\\\"problemDesc\\\">Problem Description</label>\\n\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemDesc\\\"\\n\\t\\t\\tname=\\\"ProblemDesc\\\" placeholder=\\\"Input description\\\"\\n\\t\\t\\t[(ngModel)]=\\\"newProblem.desc\\\">\\n\\t\\t</div>\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<label for=\\\"difficulty\\\">Difficulty</label>\\n\\t\\t\\t<select class=\\\"form-control\\\" id=\\\"difficulty\\\"\\n\\t\\t\\tname=\\\"difficulty\\\" required [(ngModel)]=\\\"newProblem.difficulty\\\">\\n\\t\\t\\t\\t<option *ngFor=\\\"let difficulty of difficulties\\\" [value]=\\\"difficulty\\\">\\n\\t\\t\\t\\t\\t{{difficulty}}\\n\\t\\t\\t\\t</option>\\n\\t\\t\\t</select>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\"\\n\\t\\t\\t\\t(click)=\\\"addProblem()\\\">Add problem</button>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/new-problem/new-problem.component.html\n// module id = ./src/app/components/new-problem/new-problem.component.html\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\n\nconst DEFAULT_PROBLEM: Problem = Object.freeze({\n    id: '0',\n    name: '',\n    desc: '',\n    difficulty: 'easy'\n});\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\n\nexport class NewProblemComponent implements OnInit {\n    // create a shadow copy of problem and assign it to newProblem\n    // Object.assign() copies property values. If the source value is a\n    // reference to an object, it only copies that reference value.\n    newProblem: Problem = Object.assign({}, DEFAULT_PROBLEM);\n    difficulties: String[] = ['easy', 'medium', 'hard', 'super'];\n    constructor(private dataService: DataService) { }\n\n    ngOnInit() {\n    }\n\n    addProblem() {\n        this.dataService.addProblem(this.newProblem);\n        this.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/new-problem/new-problem.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/problem-detail/problem-detail.component.css\n// module id = ./src/app/components/problem-detail/problem-detail.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"problem\\\">\\n    <div class=\\\"col-sm-12 col-md-4\\\">\\n        <div>\\n            <h2>\\n              {{problem.id}}.{{problem.name}}\\n            </h2>\\n            <p>\\n              {{problem.desc}}\\n            </p>\\n        </div>\\n    </div>\\n    <div class=\\\"hidden-xs col-sm-12 col-md-8\\\">\\n      <app-editor></app-editor>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/problem-detail/problem-detail.component.html\n// module id = ./src/app/components/problem-detail/problem-detail.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\n\nexport class ProblemDetailComponent implements OnInit {\n    problem: Problem;\n    constructor(private dataService: DataService,\n                private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        // subscribe: when params changes, this.problem will be updated\n        // +: convert string to int\n        this.route.params.subscribe (params => {\n          return ({\n              problem : this\n                .dataService\n                .getProblem(params['id'])\n                .then(problem => this.problem = problem)\n            });\n          }\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/problem-detail/problem-detail.component.ts","module.exports = \".difficult {\\n    min-width: 65px;\\n    margin-right: 18px;\\n}\\n.label.difficulty {\\n    padding-top: 0.6em;\\n    color: #fbfdfa;\\n    font-size: 12px\\n}\\n.title {\\n\\t  font-size: 1.2em;\\n}\\n.diff-easy {\\n\\t  background-color: #42ebf4;\\n}\\n.diff-medium {\\n\\t  background-color: #92cf5c;\\n}\\n.diff-hard {\\n\\t  background-color: #dd8d1e;\\n}\\n.diff-super {\\n\\t  background-color: #8d16e2;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/problem-list/problem-list.component.css\n// module id = ./src/app/components/problem-list/problem-list.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n\\t  <app-new-problem></app-new-problem>\\n</div>\\n<div class=\\\"container\\\">\\n    <div class=\\\"list-group\\\">\\n        <a class=\\\"list-group-item\\\" *ngFor=\\\"let problem of problems\\\" [routerLink]=\\\"['/problems', problem.id]\\\">\\n            <span class=\\\"{{'pull-left badge difficulty diff-' + problem.difficulty.toLocaleLowerCase()}}\\\">\\n                {{problem.difficulty}}\\n            </span>\\n            <strong class=\\\"title\\\">{{problem.id}}.{{problem.name}}</strong>\\n        </a>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/problem-list/problem-list.component.html\n// module id = ./src/app/components/problem-list/problem-list.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { DataService } from '../../services/data.service';\nimport { Problem } from '../../models/problem.model';\n\n@Component({\n    selector: 'app-problem-list',\n    templateUrl: './problem-list.component.html',\n    styleUrls: ['./problem-list.component.css']\n})\nexport class ProblemListComponent implements OnInit, OnDestroy {\n    problems: Problem[];\n    subscriptionProblems: Subscription;\n\n    // inject data service in constructor\n    constructor(private dataService: DataService) { }\n    ngOnInit() {\n        // init problems list\n        this.getProblems();\n    }\n    ngOnDestroy() {\n      this.subscriptionProblems.unsubscribe();\n    }\n    getProblems() {\n      this.subscriptionProblems = this.dataService.getProblems().subscribe(problems => this.problems = problems);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/problem-list/problem-list.component.ts","import { Injectable } from '@angular/core';\n\ndeclare var io: any; // io is alread imported in .angular.cli.json\n\n@Injectable()\nexport class CollaborationService {\n    collaborationSocket: any;\n    constructor() { }\n\n    init(editor: any, sessionId: string): void {\n        // window.location.origion: the server location on the current page\n        // for example, the current page on the browser is 'localhost:3000/problems/1',\n        // then window.location.origin = 'http/localhost:3000'\n        this.collaborationSocket = io(window.location.origin, {query: 'sessionId=' + sessionId});\n\n        // handle change send from server\n        this.collaborationSocket.on('change', (delta: string) => {\n            console.log('collabration: editor changes by ' + delta);\n            delta = JSON.parse(delta); // delta is json format\n            editor.lastAppliedChange = delta;\n            // apply the changes on editor\n            editor.getSession().getDocument().applyDeltas([delta]);\n        });\n    }\n\n    // emit event to make changes and inform server and other collaborators\n    change(delta: string): void {\n        // emit \"change\" event\n        this.collaborationSocket.emit('change', delta);\n    }\n\n    restoreBuffer(): void {\n      // emit \"restoreBuffer\" event\n      // let server handle this event\n      this.collaborationSocket.emit('restoreBuffer');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/collaboration.service.ts","import { Injectable } from '@angular/core';\nimport { Problem } from '../models/problem.model';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs/Rx';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n@Injectable()\nexport class DataService {\n    // private field start with _\n    // BehaviorSubject: when subscribe, we can get the value that was emitted last time.\n    // Subject: when subscribe, we can only get the value that was emitted after subscribe,\n    // and we cannot get value that was emitted before we subscribe.\n\n    private _problemSource = new BehaviorSubject(<Problem[]>([]));\n\n    constructor(private httpClient: HttpClient) { }\n\n    // return a list of problems\n    getProblems(): Observable<Problem[]> {\n        this.httpClient.get('api/v1/problems')\n            .toPromise()\n            .then((res: any) => {\n                // .next: next data\n                this._problemSource.next(res);\n            })\n            .catch(this.handleError);\n        return this._problemSource.asObservable();\n    }\n\n    // return a problem by input id\n    getProblem(id: string): Promise<Problem> {\n        return this.httpClient.get(`api/v1/problems/${id}`)\n            .toPromise()\n            .then((res: any) => {\n                console.log(res)\n                return res;\n            }) // same as { return res }\n            .catch(this.handleError);\n    }\n\n    addProblem(problem: Problem) {\n        const options = { headers: new HttpHeaders({'Content-Type': 'application/json'})};\n        return this.httpClient.post('api/v1/problems', problem, options)\n            .toPromise()\n            .then((res: any) => {\n                this.getProblems();\n                return res;\n            })\n            .catch(this.handleError);\n    }\n\n    buildAndRun(data): Promise<any> {\n        const options = {\n            headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n        };\n        return this.httpClient.post('api/v1/build_and_run', data, options)\n            .toPromise()\n            .then(res => {\n                console.log(res);\n                return res;\n            })\n            .catch(this.handleError);\n    }\n\n    private handleError(err: any): Promise<any> {\n        console.error('an error occured', err)\n        return Promise.reject(err.body || err);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/data.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}